@model RealEstate_Management.Models.Signup
@{
    ViewBag.Title = "SignUp";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="apple-touch-icon" sizes="76x76" href="~/Content/assets/img/apple-icon.png">
    <link rel="icon" type="image/png" href="~/Content/assets/img/favicon.png">
    <title>@ViewBag.Title - Material Dashboard 2 by Creative Tim</title>
    <!-- Fonts and icons -->
    <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900|Roboto+Slab:400,700" />
    <!-- Nucleo Icons -->
    <link href="~/Content/assets/css/nucleo-icons.css" rel="stylesheet" />
    <link href="~/Content/assets/css/nucleo-svg.css" rel="stylesheet" />
    <!-- Font Awesome Icons -->
    <script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
    <!-- Material Icons -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Round" rel="stylesheet">
    <!-- CSS Files -->
    <link id="pagestyle" href="~/Content/assets/css/material-dashboard.css?v=3.1.0" rel="stylesheet" />
    <!-- Nepcha Analytics (nepcha.com) -->
    <script defer data-site="YOUR_DOMAIN_HERE" src="https://api.nepcha.com/js/nepcha-analytics.js"></script>
    <!-- Include jQuery -->
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <!-- Include Bootstrap JS -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
    <style>
        .underline-danger {
            text-decoration: underline;
            text-decoration-color: #f44336; /* Red color */
        }
    </style>
</head>
<body>
    <div class="">
        <div class="container position-sticky z-index-sticky top-0">
            <div class="row">
                <div class="col-12">
                    <!-- Navbar -->
                    
                    <!-- End Navbar -->
                </div>
            </div>
        </div>
        <main class="main-content mt-0">
            <section>
                <div class="page-header min-vh-100">
                    <div class="container">
                        <div class="row">
                            <div class="col-6 d-lg-flex d-none h-100 my-auto pe-0 position-absolute top-0 start-0 text-center justify-content-center flex-column">
                                <div class="position-relative bg-gradient-primary h-100 m-3 px-7 border-radius-lg d-flex flex-column justify-content-center" style="background-image: url('~/Content/assets/img/illustrations/illustration-signup.jpg'); background-size: cover;">
                                </div>
                            </div>
                            <div class="col-xl-4 col-lg-5 col-md-7 d-flex flex-column ms-auto me-auto ms-lg-auto me-lg-5">
                                <div class="card card-plain">
                                    <div class="card-header">
                                        <h4 class="font-weight-bolder">Sign Up</h4>
                                        <p class="mb-0">Enter your details to register</p>
                                    </div>
                                    <div class="card-body">
                                        @using (Html.BeginForm("Sign_up", "Login", FormMethod.Post))
                                        {
                                            @Html.AntiForgeryToken()
                                            <div class="input-group input-group-outline mb-3">
                                                @Html.LabelFor(m => m.Name, new { @class = "form-label" })
                                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="input-group input-group-outline mb-3">
                                                @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="input-group input-group-outline mb-3">
                                                @Html.LabelFor(m => m.Contact, new { @class = "form-label" })
                                                @Html.TextBoxFor(m => m.Contact, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Contact, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="input-group input-group-outline mb-3">
                                                @Html.LabelFor(m => m.Password, new { @class = "form-label" })
                                                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="input-group input-group-outline mb-3">
                                                @Html.Label("Confirm Password", new { @class = "form-label" })
                                                @Html.Password("ConfirmPassword", null, new { @class = "form-control" })
                                                @Html.ValidationMessage("ConfirmPassword", "", new { @class = "text-danger" })
                                            </div>
                                            <script>
                                                document.querySelectorAll('.input-group.input-group-outline .form-control').forEach(element => {
                                                    element.addEventListener('focus', () => {
                                                        element.parentElement.classList.add('is-focused');
                                                    });

                                                    element.addEventListener('blur', () => {
                                                        element.parentElement.classList.remove('is-focused');
                                                        if (element.value !== "") {
                                                            element.parentElement.classList.add('is-filled');
                                                        } else {
                                                            element.parentElement.classList.remove('is-filled');
                                                        }
                                                    });

                                                    if (element.value !== "") {
                                                        element.parentElement.classList.add('is-filled');
                                                    }
                                                });

                                              
                                            </script>
                                        
                                            <div class="text-center">
                                                <button type="submit" class="btn btn-lg bg-gradient-primary btn-lg w-100 mt-4 mb-0">Sign Up</button>
                                            </div>
                                        }
                                    </div>
                                    <div class="card-footer text-center pt-0 px-lg-2 px-1">
                                        <p class="mb-2 text-sm mx-auto">
                                            Already have an account?
                                            <a href="@Url.Action("Sign_In", "Login")" class="text-primary text-gradient font-weight-bold">Sign in</a>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </main>
        <!-- Core JS Files -->
        <script src="~/Content/assets/js/core/popper.min.js"></script>
        <script src="~/Content/assets/js/core/bootstrap.min.js"></script>
        <script src="~/Content/assets/js/plugins/perfect-scrollbar.min.js"></script>
        <script src="~/Content/assets/js/plugins/smooth-scrollbar.min.js"></script>
        <script>
            var win = navigator.platform.indexOf('Win') > -1;
            if (win && document.querySelector('#sidenav-scrollbar')) {
                var options = {
                    damping: '0.5'
                }
                Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
            }
        </script>
        <!-- Github buttons -->
        <script async defer src="https://buttons.github.io/buttons.js"></script>
        <!-- Control Center for Material Dashboard: parallax effects, scripts for the example pages etc -->
        <script src="~/Content/assets/js/material-dashboard.min.js?v=3.1.0"></script>
    </div>
</body>
</html>
